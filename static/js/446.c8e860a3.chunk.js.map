{"version":3,"file":"static/js/446.c8e860a3.chunk.js","mappings":"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","sources":["assets/hooks/useAppDispatch.ts","redux/categories/selectors.ts","pages/RecipesPage/RecipesPage.tsx","redux/recipes/selectors.ts"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../redux/store\";\n\nconst useAppDispatch: () => AppDispatch = useDispatch;\n\nexport default useAppDispatch;\n","import { RootState } from \"../store\";\n\nexport const selectCategories = (state: RootState) =>\n  state.categories.categories;\nexport const selectIsLoadingCategories = (state: RootState) =>\n  state.categories.isLoading;\nexport const selectCategoriesError = (state: RootState) =>\n  state.categories.error;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectRecipes,\n  selectIsLoading,\n  selectError,\n} from \"../../redux/recipes/selectors\";\nimport {\n  selectCategories,\n  selectIsLoadingCategories,\n  selectCategoriesError,\n} from \"../../redux/categories/selectors\";\nimport { fetchRecipesThunk } from \"../../redux/recipes/operations\";\nimport { fetchCategoriesThunk } from \"../../redux/categories/operations\";\nimport {\n  TextField,\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  CircularProgress,\n  Pagination,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { debounce } from \"lodash\";\nimport useAppDispatch from \"../../assets/hooks/useAppDispatch\";\nimport { ICategory } from \"../../redux/store.types\";\nimport { Link } from \"react-router-dom\";\n\nconst RecipesPage: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const recipes = useSelector(selectRecipes);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const categories = useSelector(selectCategories);\n  const isLoadingCategories = useSelector(selectIsLoadingCategories);\n  const categoriesError = useSelector(selectCategoriesError);\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredRecipes, setFilteredRecipes] = useState(recipes);\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const recipesPerPage = 10;\n\n  useEffect(() => {\n    dispatch(fetchRecipesThunk());\n    dispatch(fetchCategoriesThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const filtered = selectedCategory\n      ? recipes.filter(recipe => recipe.strCategory === selectedCategory)\n      : recipes;\n    setFilteredRecipes(\n      filtered.filter(recipe =>\n        recipe.strMeal.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n    );\n  }, [recipes, selectedCategory, searchQuery]);\n\n  const handleSearchChange = debounce(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchQuery(event.target.value);\n    },\n    300\n  );\n\n  const handleCategoryChange = (event: SelectChangeEvent<string>) => {\n    setSelectedCategory(event.target.value);\n  };\n\n  const handlePageChange = (\n    event: React.ChangeEvent<unknown>,\n    value: number\n  ) => {\n    setCurrentPage(value);\n  };\n\n  const indexOfLastRecipe = currentPage * recipesPerPage;\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\n  const currentRecipes = filteredRecipes.slice(\n    indexOfFirstRecipe,\n    indexOfLastRecipe\n  );\n\n  if (isLoading || isLoadingCategories) return <CircularProgress />;\n  if (error || categoriesError) return <div>Error loading data.</div>;\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <TextField\n        label=\"Search recipes\"\n        variant=\"outlined\"\n        fullWidth\n        margin=\"normal\"\n        onChange={handleSearchChange}\n      />\n      <FormControl variant=\"outlined\" fullWidth margin=\"normal\">\n        <InputLabel>Category</InputLabel>\n        <Select\n          value={selectedCategory}\n          onChange={handleCategoryChange}\n          label=\"Category\"\n        >\n          <MenuItem value=\"\">All</MenuItem>\n          {categories.map((category: ICategory) => (\n            <MenuItem key={category.strCategory} value={category.strCategory}>\n              {category.strCategory}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <Box\n        display=\"grid\"\n        gridTemplateColumns=\"repeat(auto-fill, minmax(280px, 1fr))\"\n        gap={4}\n        mt={2}\n      >\n        {currentRecipes.map(recipe => (\n          <Card key={recipe.idMeal}>\n            <Link\n              to={`/recipes/${recipe.idMeal}`}\n              style={{ textDecoration: \"none\", color: \"inherit\" }}\n            >\n              <CardMedia\n                component=\"img\"\n                alt={recipe.strMeal}\n                height=\"140\"\n                image={recipe.strMealThumb}\n              />\n              <CardContent>\n                <Typography variant=\"h6\" component=\"div\">\n                  {recipe.strMeal}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Category: {recipe.strCategory} | Area: {recipe.strArea}\n                </Typography>\n              </CardContent>\n            </Link>\n          </Card>\n        ))}\n      </Box>\n      <Pagination\n        count={Math.ceil(filteredRecipes.length / recipesPerPage)}\n        page={currentPage}\n        onChange={handlePageChange}\n        shape=\"rounded\"\n        sx={{ mt: 4 }}\n      />\n    </Box>\n  );\n};\n\nexport default RecipesPage;\n","import { RootState } from \"../store\";\n\nexport const selectRecipes = (state: RootState) => state.recipes.recipes;\nexport const selectIsLoading = (state: RootState) => state.recipes.isLoading;\nexport const selectError = (state: RootState) => state.recipes.error;\nexport const selectRecipeById = (state: RootState) =>\n  state.recipes.recipeDetails;\n"],"names":["useDispatch","selectCategories","state","categories","selectIsLoadingCategories","isLoading","selectCategoriesError","error","RecipesPage","dispatch","useAppDispatch","recipes","useSelector","selectRecipes","selectIsLoading","selectError","isLoadingCategories","categoriesError","searchQuery","setSearchQuery","useState","filteredRecipes","setFilteredRecipes","selectedCategory","setSelectedCategory","currentPage","setCurrentPage","useEffect","fetchRecipesThunk","fetchCategoriesThunk","filtered","filter","recipe","strCategory","strMeal","toLowerCase","includes","handleSearchChange","debounce","event","target","value","indexOfLastRecipe","indexOfFirstRecipe","currentRecipes","slice","_jsx","CircularProgress","children","_jsxs","Box","sx","p","TextField","label","variant","fullWidth","margin","onChange","FormControl","InputLabel","Select","MenuItem","map","category","display","gridTemplateColumns","gap","mt","Card","Link","to","idMeal","style","textDecoration","color","CardMedia","component","alt","height","image","strMealThumb","CardContent","Typography","strArea","Pagination","count","Math","ceil","length","page","handlePageChange","shape","selectRecipeById","recipeDetails"],"sourceRoot":""}